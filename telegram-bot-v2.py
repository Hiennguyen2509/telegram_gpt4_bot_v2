import telebot
import requests
import openai
import os

from dotenv import load_dotenv

# Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
load_dotenv()

# L·∫•y API Key t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
print("Loaded API Key: ", OPENAI_API_KEY)

# üîπ Nh·∫≠p Token c·ªßa bot Telegram
TELEGRAM_BOT_TOKEN = "7962172499:AAGt--fa3YcJB_VVbgULYkK6NaH5vSxVPjA"

# Kh·ªüi t·∫°o bot Telegram
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    """X·ª≠ l√Ω ·∫£nh t·ª´ Telegram"""
    try:
        # L·∫•y ID c·ªßa ·∫£nh l·ªõn nh·∫•t (ch·∫•t l∆∞·ª£ng cao nh·∫•t)
        file_id = message.photo[-1].file_id
        file_info = bot.get_file(file_id)

        # L·∫•y URL ·∫£nh t·ª´ Telegram
        image_url = f"https://api.telegram.org/file/bot{TELEGRAM_BOT_TOKEN}/{file_info.file_path}"

        # G·ª≠i ·∫£nh ƒë·∫øn GPT-4o ƒë·ªÉ ph√¢n t√≠ch v√† ki·ªÉm tra
        analysis_result = analyze_trade_image(image_url)

        # G·ª≠i k·∫øt qu·∫£ v·ªÅ Telegram
        bot.reply_to(message, analysis_result)

    except Exception as e:
        bot.reply_to(message, f"‚ùå L·ªói khi x·ª≠ l√Ω ·∫£nh:\n\n{str(e)}")

def analyze_trade_image(image_url):
    """G·ª≠i ·∫£nh ƒë·∫øn GPT-4o v√† ki·ªÉm tra ƒëi·ªÅu ki·ªán giao d·ªãch"""
    client = openai.OpenAI(api_key=OPENAI_API_KEY)

    prompt = """
B·∫°n l√† m·ªôt chuy√™n gia t√†i ch√≠nh. T√¥i s·∫Ω cung c·∫•p m·ªôt h√¨nh ·∫£nh ch·ª©a th√¥ng tin giao d·ªãch forex.  
H√£y ph√¢n t√≠ch d·ªØ li·ªáu trong ·∫£nh v√† ki·ªÉm tra xem c√≥ ƒë√°p ·ª©ng c√°c ti√™u ch√≠ sau kh√¥ng:

### üìå Ti√™u ch√≠ ki·ªÉm tra:
1Ô∏è‚É£ **Th·ªùi gian m·ªü l·ªánh c·ªßa hai t√†i kho·∫£n ph·∫£i c√≥ sai s·ªë trong kho·∫£ng t·ª´ 0 ƒë·∫øn 10 gi√¢y.**  
2Ô∏è‚É£ **Th·ªùi gian ƒë√≥ng l·ªánh c·ªßa hai t√†i kho·∫£n ph·∫£i c√≥ sai s·ªë trong kho·∫£ng t·ª´ 0 ƒë·∫øn 10 gi√¢y.**  

### üîπ Quy t·∫Øc ƒë√°nh gi√°:
‚úÖ **Giao d·ªãch h·ª£p l·ªá n·∫øu sai s·ªë n·∫±m trong kho·∫£ng t·ª´ 0 ƒë·∫øn 10 gi√¢y (bao g·ªìm c·∫£ 0 v√† 10).**  
‚ùå **Giao d·ªãch kh√¥ng h·ª£p l·ªá n·∫øu sai s·ªë l·ªõn h∆°n 10 gi√¢y.**  

### üîπ C√°ch tr·∫£ v·ªÅ k·∫øt qu·∫£:
- N·∫øu giao d·ªãch h·ª£p l·ªá (**sai s·ªë t·ª´ 0 ƒë·∫øn 10 gi√¢y**), **ch·ªâ tr·∫£ v·ªÅ k√Ω hi·ªáu** `‚úÖ`. **Kh√¥ng ƒë∆∞·ª£c gi·∫£i th√≠ch th√™m.**  
- N·∫øu giao d·ªãch kh√¥ng h·ª£p l·ªá (**sai s·ªë > 10 gi√¢y**), tr·∫£ v·ªÅ `‚ùå` k√®m theo s·ªë gi√¢y sai l·ªách v√† th√¥ng b√°o giao d·ªãch kh√¥ng h·ª£p l·ªá.  

### üì¢ L∆∞u √Ω quan tr·ªçng:
- **N·∫øu sai s·ªë l√† 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 gi√¢y**, giao d·ªãch v·∫´n h·ª£p l·ªá v√† ch·ªâ tr·∫£ v·ªÅ `‚úÖ`, **kh√¥ng b√°o l·ªói trong b·∫•t k·ª≥ tr∆∞·ªùng h·ª£p n√†o**.   
- **N·∫øu sai s·ªë l·ªõn h∆°n 10 gi√¢y**, GPT ph·∫£i b√°o l·ªói v·ªõi k√Ω hi·ªáu `‚ùå` v√† s·ªë gi√¢y sai l·ªách.  
"""

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "B·∫°n l√† chuy√™n gia ph√¢n t√≠ch giao d·ªãch forex."},
            {"role": "user", "content": [
                {"type": "text", "text": prompt},
                {"type": "image_url", "image_url": {"url": image_url}}
            ]}
        ],
        max_tokens=1000
    )

    return response.choices[0].message.content if response.choices else "‚ùå Kh√¥ng th·ªÉ ph√¢n t√≠ch giao d·ªãch."

# Ch·∫°y bot Telegram
bot.polling()
